apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: grafana
data:
# TODO: to make a placeholder for the server.root_url property?
  defaults.ini: |
    app_mode = production
    instance_name = ${HOSTNAME}
    force_migration = false
    [paths]
    data = data
    temp_data_lifetime = 24h
    logs = data/log
    plugins = data/plugins
    provisioning = conf/provisioning
    [server]
    protocol = http
    http_addr =
    http_port = 3000
    domain = localhost
    enforce_domain = false
    root_url = http://localhost:3000/
    serve_from_sub_path = false
    router_logging = false
    static_root_path = public
    enable_gzip = false
    cert_file =
    cert_key =
    socket = /tmp/grafana.sock
    cdn_url =
    read_timeout = 0
    [database]
    type = sqlite3
    host = 127.0.0.1:3306
    name = grafana
    user = root
    password =
    url =
    max_idle_conn = 2
    max_open_conn =
    conn_max_lifetime = 14400
    log_queries =
    ssl_mode = disable
    isolation_level =
    ca_cert_path =
    client_key_path =
    client_cert_path =
    server_cert_name =
    path = grafana.db
    cache_mode = private
    locking_attempt_timeout_sec = 0
    [remote_cache]
    type = database
    connstr =
    [dataproxy]
    logging = false
    timeout = 30
    dialTimeout = 10
    keep_alive_seconds = 30
    tls_handshake_timeout_seconds = 10
    expect_continue_timeout_seconds = 1
    max_conns_per_host = 0
    max_idle_connections = 100
    idle_conn_timeout_seconds = 90
    send_user_header = false
    response_limit = 0
    row_limit = 1000000
    [analytics]
    reporting_enabled = false
    reporting_distributor = grafana-labs
    check_for_updates = false
    check_for_plugin_updates = false
    google_analytics_ua_id =
    google_tag_manager_id =
    rudderstack_write_key =
    rudderstack_data_plane_url =
    rudderstack_sdk_url =
    rudderstack_config_url =
    application_insights_connection_string =
    application_insights_endpoint_url =
    feedback_links_enabled = true
    [security]
    disable_initial_admin_creation = false
    admin_user = admin
    admin_password = admin
    secret_key = SW2YcwTIb9zpOOhoPsMm
    encryption_provider = secretKey.v1
    available_encryption_providers =
    disable_gravatar = false
    data_source_proxy_whitelist =
    disable_brute_force_login_protection = false
    cookie_secure = false
    cookie_samesite = lax
    allow_embedding = false
    strict_transport_security = false
    strict_transport_security_max_age_seconds = 86400
    strict_transport_security_preload = false
    strict_transport_security_subdomains = false
    x_content_type_options = true
    x_xss_protection = true
    content_security_policy = false
    content_security_policy_template = """script-src 'self' 'unsafe-eval' 'unsafe-inline' 'strict-dynamic' $NONCE;object-src 'none';font-src 'self';style-src 'self' 'unsafe-inline' blob:;img-src * data:;base-uri 'self';connect-src 'self' grafana.com ws://$ROOT_PATH wss://$ROOT_PATH;manifest-src 'self';media-src 'none';form-action 'self';"""
    angular_support_enabled = true
    [security.encryption]
    data_keys_cache_ttl = 15m
    data_keys_cache_cleanup_interval = 1m
    [snapshots]
    external_enabled = true
    external_snapshot_url = https://snapshots.raintank.io
    external_snapshot_name = Publish to snapshots.raintank.io
    public_mode = false
    snapshot_remove_expired = true
    [dashboards]
    versions_to_keep = 20
    min_refresh_interval = 5s
    default_home_dashboard_path =
    [datasources]
    datasource_limit = 5000
    [users]
    allow_sign_up = false
    allow_org_create = false
    auto_assign_org = true
    auto_assign_org_id = 1
    auto_assign_org_role = Viewer
    verify_email_enabled = false
    login_hint = email or username
    password_hint = password
    default_theme = dark
    home_page =
    external_manage_link_url =
    external_manage_link_name =
    external_manage_info =
    viewers_can_edit = false
    editors_can_admin = false
    user_invite_max_lifetime_duration = 24h
    hidden_users =
    [auth]
    login_cookie_name = grafana_session
    login_maximum_inactive_lifetime_duration =
    login_maximum_lifetime_duration =
    token_rotation_interval_minutes = 10
    disable_login_form = false
    disable_signout_menu = false
    signout_redirect_url =
    oauth_auto_login = false
    oauth_state_cookie_max_age = 600
    oauth_skip_org_role_update_sync = false
    api_key_max_seconds_to_live = -1
    sigv4_auth_enabled = false
    sigv4_verbose_logging = false
    [auth.azuread]
    name = Azure AD
    enabled = false
    allow_sign_up = true
    client_id = 
    client_secret = 
    scopes = openid email profile
    auth_url = 
    token_url = 
    allowed_domains =
    allowed_groups =
    role_attribute_strict = false
    pro_user_group = 631d63c7-a273-4f4e-b9dc-d4179ec69893
    [auth.basic]
    enabled = true
    [azure]
    cloud = AzureCloud
    managed_identity_enabled = false
    managed_identity_client_id =
    [rbac]
    enabled = true
    permission_cache = true
    [smtp]
    enabled = false
    host = localhost:25
    user =
    password =
    cert_file =
    key_file =
    skip_verify = false
    from_address = admin@grafana.localhost
    from_name = Grafana
    ehlo_identity =
    startTLS_policy =
    [emails]
    welcome_email_on_sign_up = false
    templates_pattern = emails/*.html, emails/*.txt
    content_types = text/html
    [log]
    mode = console file
    level = info
    filters =
    [log.console]
    level =
    format = console
    [log.file]
    level =
    format = text
    log_rotate = true
    max_lines = 1000000
    max_size_shift = 28
    daily_rotate = true
    max_days = 7
    [log.syslog]
    level =
    format = text
    network =
    address =
    facility =
    tag =
    [log.frontend]
    enabled = false
    sentry_dsn =
    custom_endpoint = /log
    sample_rate = 1.0
    log_endpoint_requests_per_second_limit = 3
    log_endpoint_burst_limit = 15
    [quota]
    enabled = false
    org_user = 10
    org_dashboard = 100
    org_data_source = 10
    org_api_key = 10
    org_alert_rule = 100
    user_org = 10
    global_user = -1
    global_org = -1
    global_dashboard = -1
    global_api_key = -1
    global_session = -1
    global_alert_rule = -1
    [unified_alerting]
    enabled =
    disabled_orgs =
    admin_config_poll_interval = 60s
    alertmanager_config_poll_interval = 60s
    ha_listen_address = "0.0.0.0:9094"
    ha_advertise_address = ""
    ha_peers = ""
    ha_peer_timeout = 15s
    ha_gossip_interval = 200ms
    ha_push_pull_interval = 60s
    execute_alerts = true
    evaluation_timeout = 30s
    max_attempts = 3
    min_interval = 10s
    [unified_alerting.screenshots]
    capture = false
    max_concurrent_screenshots = 5
    upload_external_image_storage = false
    [alerting]
    enabled =
    execute_alerts = true
    error_or_timeout = alerting
    nodata_or_nullvalues = no_data
    concurrent_render_limit = 5
    evaluation_timeout_seconds = 30
    notification_timeout_seconds = 30
    max_attempts = 3
    min_interval_seconds = 1
    max_annotation_age =
    max_annotations_to_keep =
    [annotations]
    cleanupjob_batchsize = 100
    [annotations.dashboard]
    max_age =
    max_annotations_to_keep =
    [annotations.api]
    max_age =
    max_annotations_to_keep =
    [explore]
    enabled = true
    [help]
    enabled = true
    [profile]
    enabled = true
    [query_history]
    enabled = true
    [metrics]
    enabled              = true
    interval_seconds     = 10
    disable_total_stats = false
    basic_auth_username =
    basic_auth_password =
    [metrics.environment_info]
    [metrics.graphite]
    address =
    prefix = prod.grafana.%(instance_name)s.
    [grafana_net]
    url = https://grafana.com
    [grafana_com]
    url = https://grafana.com
    [tracing.jaeger]
    address =
    always_included_tag =
    sampler_type = const
    sampler_param = 1
    sampling_server_url =
    zipkin_propagation = false
    disable_shared_zipkin_spans = false
    [tracing.opentelemetry.jaeger]
    address =
    propagation =
    [tracing.opentelemetry.otlp]
    address =
    propagation =
    [external_image_storage]
    provider =
    [external_image_storage.s3]
    endpoint =
    path_style_access =
    bucket_url =
    bucket =
    region =
    path =
    access_key =
    secret_key =
    [external_image_storage.webdav]
    url =
    username =
    password =
    public_url =
    [external_image_storage.gcs]
    key_file =
    bucket =
    path =
    enable_signed_urls = false
    signed_url_expiration =
    [external_image_storage.azure_blob]
    account_name =
    account_key =
    container_name =
    [external_image_storage.local]
    [rendering]
    server_url =
    callback_url =
    concurrent_render_request_limit = 30
    [panels]
    enable_alpha = false
    disable_sanitize_html = false
    [plugins]
    enable_alpha = false
    app_tls_skip_verify_insecure = false
    allow_loading_unsigned_plugins =
    plugin_admin_enabled = true
    plugin_admin_external_manage_enabled = false
    plugin_catalog_url = https://grafana.com/grafana/plugins/
    plugin_catalog_hidden_plugins =
    [live]
    max_connections = 100
    allowed_origins =
    ha_engine =
    ha_engine_address = "127.0.0.1:6379"
    [plugin.grafana-image-renderer]
    rendering_timezone =
    rendering_language =
    rendering_viewport_device_scale_factor =
    rendering_ignore_https_errors =
    rendering_verbose_logging =
    rendering_dumpio =
    rendering_args =
    rendering_chrome_bin =
    rendering_mode =
    rendering_clustering_mode =
    rendering_clustering_max_concurrency =
    rendering_clustering_timeout =
    rendering_viewport_max_width =
    rendering_viewport_max_height =
    rendering_viewport_max_device_scale_factor =
    grpc_host =
    grpc_port =
    [enterprise]
    license_path =
    [feature_toggles]
    enable =
    promQueryBuilder = true
    lokiQueryBuilder = true
    explore2Dashboard = true
    commandPalette = true
    cloudWatchDynamicLabels = true
    [date_formats]
    full_date = YYYY-MM-DD HH:mm:ss
    interval_second = HH:mm:ss
    interval_minute = HH:mm
    interval_hour = MM/DD HH:mm
    interval_day = MM/DD
    interval_month = YYYY-MM
    interval_year = YYYY
    use_browser_locale = false
    default_timezone = browser
    [expressions]
    enabled = true
    [geomap]
    default_baselayer_config =
    enable_custom_baselayers = true
    [dashboard_previews.crawler]
    thread_count =
    rendering_timeout =
    max_crawl_duration =
    scheduler_interval =
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  serviceName: grafana-svc
  replicas: 2
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:9.0.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: GF_DEFAULT_APP_MODE
          value: "development"
        - name: GF_ALLOW_LOADING_UNSIGNED_PLUGINS
          value: equipment-states-panel, custom-svg-panel
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /usr/share/grafana/conf

      volumes:
      - name: grafana-data
        persistentVolumeClaim: 
          claimName: grafana-pvc
      - name: grafana-config
        configMap:
          name: grafana-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-svc
  namespace: grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30020
